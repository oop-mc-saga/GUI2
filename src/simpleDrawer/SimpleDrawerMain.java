package simpleDrawer;

import java.io.File;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JSlider;
import javax.swing.JToggleButton;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tadaki
 */
public class SimpleDrawerMain extends javax.swing.JFrame {

    private final Color erasingColor = Color.RED;
    private final Color eraserColor;
    private final JToggleButton eraser;
    private final JLabel label2;
    private final Font font;
    private final JSlider lineWidthSlider;

    /**
     * Creates new form SimpleDrawerMain
     */
    public SimpleDrawerMain() {
        initComponents();
        font = new Font("MS UI Gothic", 0, 24);
        //消しゴムのトグルボタン
        eraser = new JToggleButton("ERASER");
        eraser.setFont(font);
        eraser.addActionListener(e -> eraserActionPerformed(e));
        eraser.setSelected(false);
        menuBar.add(eraser);
        eraserColor = eraser.getBackground();
        //線幅
        label2 = new JLabel("Line WIdth");
        label2.setFont(font);
        menuBar.add(label2);

        lineWidthSlider = new JSlider();
        lineWidthSlider.setFont(font);
        lineWidthSlider.setPaintTicks(true);
        lineWidthSlider.setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
        lineWidthSlider.setBackground(Color.white);
        lineWidthSlider.addChangeListener(e -> lineWidthSliderStateChanged2(e));
        menuBar.add(lineWidthSlider);

        drawPanel.initialize();
        drawPanel.setLineWidth(lineWidthSlider.getValue());
        pack();
    }

    /**
     * 線幅を変更するメソッド
     *
     * @param evt
     */
    private void lineWidthSliderStateChanged2(javax.swing.event.ChangeEvent evt) {
        int w = lineWidthSlider.getValue();
        drawPanel.setLineWidth(w);
        setEraserColor(false);
    }

    /**
     * 消しゴムを開始
     *
     * @param evt
     */
    private void eraserActionPerformed(java.awt.event.ActionEvent evt) {
        boolean erase = eraser.isSelected();
        setEraserColor(erase);
    }

    /**
     * 消しゴムの色
     *
     * @param b
     */
    private void setEraserColor(boolean b) {
        drawPanel.setEraser(b);
        eraser.setSelected(b);
        if (eraser.isSelected()) {
            eraser.setBackground(erasingColor);
        } else {
            eraser.setBackground(eraserColor);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawPanel = new simpleDrawer.DrawPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        save = new javax.swing.JMenuItem();
        quit = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        clearImage = new javax.swing.JMenuItem();
        selectColor = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        javax.swing.GroupLayout drawPanelLayout = new javax.swing.GroupLayout(drawPanel);
        drawPanel.setLayout(drawPanelLayout);
        drawPanelLayout.setHorizontalGroup(
            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        drawPanelLayout.setVerticalGroup(
            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 652, Short.MAX_VALUE)
        );

        getContentPane().add(drawPanel, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");
        fileMenu.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 24)); // NOI18N

        save.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 24)); // NOI18N
        save.setText("SAVE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        fileMenu.add(save);

        quit.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 24)); // NOI18N
        quit.setText("QUIT");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });
        fileMenu.add(quit);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");
        editMenu.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 24)); // NOI18N

        clearImage.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 24)); // NOI18N
        clearImage.setText("CLEAR");
        clearImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearImageActionPerformed(evt);
            }
        });
        editMenu.add(clearImage);

        selectColor.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 24)); // NOI18N
        selectColor.setText("SELECT COLOR");
        selectColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectColorActionPerformed(evt);
            }
        });
        editMenu.add(selectColor);

        menuBar.add(editMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
        dispose();
    }//GEN-LAST:event_quitActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Image", "png", "jpg");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            drawPanel.saveImage(file);
        }
        setEraserColor(false);
    }//GEN-LAST:event_saveActionPerformed

    private void clearImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearImageActionPerformed
        drawPanel.initializeImage();
        drawPanel.repaint();
        setEraserColor(false);
    }//GEN-LAST:event_clearImageActionPerformed

    private void selectColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectColorActionPerformed
        java.awt.Color newColor = JColorChooser.showDialog(
                this, "Choose Foreground Color", getBackground());
        drawPanel.setForeground(newColor);
        setEraserColor(false);
    }//GEN-LAST:event_selectColorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimpleDrawerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimpleDrawerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimpleDrawerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleDrawerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimpleDrawerMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem clearImage;
    private simpleDrawer.DrawPanel drawPanel;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem quit;
    private javax.swing.JMenuItem save;
    private javax.swing.JMenuItem selectColor;
    // End of variables declaration//GEN-END:variables
}
